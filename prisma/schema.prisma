generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id           String   @id @default(cuid())
  name         String
  price        Int?
  category     String
  categorySlug String
  sku          String   @unique
  images       String[]
  short_desc   String
  description  String
  specs        Json
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model NewsArticle {
  id        String   @id @default(cuid())
  slug      String   @unique
  title     String
  excerpt   String
  imageUrl  String
  date      DateTime
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id        String   @id @default(cuid())
  slug      String   @unique
  title     String
  imgSrc    String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SiteSettings {
  id                  String   @id @default("main_settings")
  facebookUrl         String
  youtubeUrl          String
  primaryColor        String
  backgroundColor     String
  updatedAt           DateTime @updatedAt
  footerAddressHQ     String   @default("Địa chỉ trụ sở")
  footerAddressOffice String   @default("Địa chỉ văn phòng")
  footerCopyrightYear String   @default("2024")
  footerEmail         String   @default("email@example.com")
  footerPhoneNumbers  String   @default("SĐT Footer")
  headerPhoneNumbers  String   @default("SĐT Header")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model HeroSlide {
  id        String   @id @default(cuid())
  url       String
  alt       String
  order     Int
  createdAt DateTime @default(now())
}

model Page {
  id        String   @id @default(cuid())
  slug      String   @unique // Dùng để truy cập trang, ví dụ: "ho-so-nang-luc"
  title     String   // Tiêu đề của trang, ví dụ: "Hồ sơ năng lực"
  content   String   @db.Text // Nội dung HTML của trang
  updatedAt DateTime @updatedAt
}
model Machinery {
  id        String   @id @default(cuid())
  name      String   // Tên máy, ví dụ: "Máy cắt LASER 12000W"
  imageUrl  String   // URL của ảnh
  order     Int      // Thứ tự hiển thị

  createdAt DateTime @default(now())
}

model Partner {
  id        String   @id @default(cuid())
  name      String   // Tên đối tác (dùng cho alt text)
  logoUrl   String   // URL của ảnh logo
  order     Int      // Thứ tự hiển thị

  createdAt DateTime @default(now())
}