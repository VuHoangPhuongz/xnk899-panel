// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String @id @default(cuid())
  name        String
  price       Int?
  category    String
  categorySlug String
  sku         String @unique
  images      String[]
  short_desc  String @db.Text
  description String @db.Text
  specs       Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model NewsArticle {
  id        String   @id @default(cuid())
  slug      String   @unique
  title     String
  excerpt   String   @db.Text
  imageUrl  String
  date      DateTime
  content   String   @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id        String   @id @default(cuid())
  slug      String   @unique
  title     String
  imgSrc    String
  content   String   @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SiteSettings {
  id              String @id @default("main_settings")

  // --- Header Settings ---
  // Thêm @default cho các trường mới
  headerPhoneNumbers String @default("SĐT Header")
  facebookUrl     String
  youtubeUrl      String

  // --- Footer Settings ---
  // Thêm @default cho các trường mới
  footerAddressHQ       String   @default("Địa chỉ trụ sở")
  footerAddressOffice   String   @default("Địa chỉ văn phòng")
  footerEmail           String   @default("email@example.com")
  footerCopyrightYear   String   @default("2024")
  footerPhoneNumbers    String   @default("SĐT Footer")

  // --- Theme Settings ---
  primaryColor    String
  backgroundColor String

  updatedAt DateTime @updatedAt
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String? // Thêm trường password
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model HeroSlide {
  id        String   @id @default(cuid())
  url       String   // Đường dẫn ảnh
  alt       String   // Văn bản thay thế
  order     Int      // Thứ tự hiển thị
  createdAt DateTime @default(now())
}